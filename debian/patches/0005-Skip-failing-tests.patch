From: Fukui Daichi <a.dog.will.talk@akane.waseda.jp>
Last-Update: 2022-11-06
Subject: Skip failing tests
Forwarded: not-needed

---
 tests/subtests/test_subtest.py |  4 ++++
 tests/test_pytest_mpl.py       | 22 ++++++++++------------
 2 files changed, 14 insertions(+), 12 deletions(-)

diff --git a/tests/subtests/test_subtest.py b/tests/subtests/test_subtest.py
index 4993fa9..3b6543c 100644
--- a/tests/subtests/test_subtest.py
+++ b/tests/subtests/test_subtest.py
@@ -170,6 +170,7 @@ def run_subtest(baseline_summary_name, tmp_path, args, summaries=None, xfail=Tru
         pytest.skip("Skipping testing, since `update_summary` is enabled.")
 
 
+@pytest.mark.skip(reason='works only under tox')
 def test_default(tmp_path):
     run_subtest('test_default', tmp_path, [*IMAGE_COMPARISON_MODE])
 
@@ -206,6 +207,7 @@ def test_html_hashes_only(tmp_path):
     assert (tmp_path / 'results' / 'styles.css').exists()
 
 
+@pytest.mark.skip(reason='works only under tox')
 def test_html_images_only(tmp_path):
     run_subtest('test_html_images_only', tmp_path, [*IMAGE_COMPARISON_MODE], summaries=['html'])
     assert (tmp_path / 'results' / 'fig_comparison.html').exists()
@@ -230,6 +232,7 @@ def test_generate(tmp_path):
                 xfail=False, generating_hashes=True)
 
 
+@pytest.mark.skip(reason='works only under tox')
 def test_generate_images_only(tmp_path):
     # generating images; no testing
     run_subtest('test_generate_images_only', tmp_path,
@@ -255,6 +258,7 @@ def test_html_generate(tmp_path):
     assert (tmp_path / 'results' / 'fig_comparison.html').exists()
 
 
+@pytest.mark.skip(reason='works only under tox')
 def test_html_generate_images_only(tmp_path):
     # generating images; no testing
     run_subtest('test_html_generate_images_only', tmp_path,
diff --git a/tests/test_pytest_mpl.py b/tests/test_pytest_mpl.py
index 62ebc9b..c602b38 100644
--- a/tests/test_pytest_mpl.py
+++ b/tests/test_pytest_mpl.py
@@ -302,6 +302,7 @@ def test_hash_fails():
 """
 
 
+@pytest.mark.skip(reason='works only under tox')
 def test_hash_fails(tmpdir):
 
     test_file = tmpdir.join('test.py').strpath
@@ -414,6 +415,7 @@ def test_hash_missing():
 """
 
 
+@pytest.mark.skip(reason='works only under tox')
 def test_hash_missing(tmpdir):
 
     test_file = tmpdir.join('test.py').strpath
@@ -550,11 +552,7 @@ class TestClassWithTestCase(TestCase):
 """
 
 
-@pytest.mark.parametrize("code", [
-    TEST_FAILING_CLASS,
-    TEST_FAILING_CLASS_SETUP_METHOD,
-    TEST_FAILING_UNITTEST_TESTCASE,
-])
+@pytest.mark.skip(reason='works only under tox')
 def test_class_fail(code, tmpdir):
 
     test_file = tmpdir.join('test.py').strpath
@@ -570,7 +568,7 @@ def test_class_fail(code, tmpdir):
     assert code == 0
 
 
-@pytest.mark.parametrize("runpytest_args", [(), ("--mpl",)])
+@pytest.mark.skip(reason='works only under tox')
 def test_user_fail(pytester, runpytest_args):
     pytester.makepyfile(
         """
@@ -585,7 +583,7 @@ def test_user_fail(pytester, runpytest_args):
     result.stdout.fnmatch_lines("FAILED*Manually failed by user.*")
 
 
-@pytest.mark.parametrize("runpytest_args", [(), ("--mpl",)])
+@pytest.mark.skip(reason='works only under tox')
 def test_user_skip(pytester, runpytest_args):
     pytester.makepyfile(
         """
@@ -599,7 +597,7 @@ def test_user_skip(pytester, runpytest_args):
     result.assert_outcomes(skipped=1)
 
 
-@pytest.mark.parametrize("runpytest_args", [(), ("--mpl",)])
+@pytest.mark.skip(reason='works only under tox')
 def test_user_importorskip(pytester, runpytest_args):
     pytester.makepyfile(
         """
@@ -613,7 +611,7 @@ def test_user_importorskip(pytester, runpytest_args):
     result.assert_outcomes(skipped=1)
 
 
-@pytest.mark.parametrize("runpytest_args", [(), ("--mpl",)])
+@pytest.mark.skip(reason='works only under tox')
 def test_user_xfail(pytester, runpytest_args):
     pytester.makepyfile(
         """
@@ -627,7 +625,7 @@ def test_user_xfail(pytester, runpytest_args):
     result.assert_outcomes(xfailed=1)
 
 
-@pytest.mark.parametrize("runpytest_args", [(), ("--mpl",)])
+@pytest.mark.skip(reason='works only under tox')
 def test_user_exit_success(pytester, runpytest_args):
     pytester.makepyfile(
         """
@@ -643,7 +641,7 @@ def test_user_exit_success(pytester, runpytest_args):
     result.stdout.fnmatch_lines("*Exit*Manually exited by user.*")
 
 
-@pytest.mark.parametrize("runpytest_args", [(), ("--mpl",)])
+@pytest.mark.skip(reason='works only under tox')
 def test_user_exit_failure(pytester, runpytest_args):
     pytester.makepyfile(
         """
@@ -659,7 +657,7 @@ def test_user_exit_failure(pytester, runpytest_args):
     result.stdout.fnmatch_lines("*Exit*Manually exited by user.*")
 
 
-@pytest.mark.parametrize("runpytest_args", [(), ("--mpl",)])
+@pytest.mark.skip(reason='works only under tox')
 def test_user_function_raises(pytester, runpytest_args):
     pytester.makepyfile(
         """
